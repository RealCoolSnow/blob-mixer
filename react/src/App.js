import React, { useState, memo, Suspense } from 'react'
import { VRCanvas, DefaultXRControllers } from '@react-three/xr'
// import { Stats } from '@react-three/drei'
import { Controls, withControls } from 'react-three-gui';
// import { PCFSoftShadowMap } from 'three';
import { Perf } from 'r3f-perf'

import {
  BrowserRouter as Router,
  Switch,
  Route,
} from "react-router-dom";

// import copy from 'copy-to-clipboard';

// import XRPackage from './XRPackage'
import Scene from './components/canvas/Scene'
import MyOrbitControls from './components/canvas/MyOrbitControls'
import { useQueryState } from './useQueryState'
import VRButton from './components/ui/VRButton'
import RemixCTA from './components/ui/RemixCTA'
import Gallery from './components/ui/Gallery/'
import Remixer from './components/ui/Remixer/'
import BackLink from './components/ui/BackLink'
import AboutOverlay from './components/ui/AboutOverlay'
import Loader from './components/ui/Loader'

import { useUIStore } from './store'

import './App.scss';

// polyfill this way for react-three-gui
(async () => {
  if ('ResizeObserver' in window === false) {
    // Loads polyfill asynchronously, only if required.
    const module = await import('@juggle/resize-observer');
    window.ResizeObserver = module.ResizeObserver;
  }
})();

const CanvasWithControls = withControls(VRCanvas);

// function CopyToClipboard() {
//   useControl('Copy blob URL', { type: 'button', onClick: () => {
//     return copy(window.location.protocol + '//' + window.location.host + '/view' + window.location.search)
//   }});
//   return null
// }

const iconPosition = [0, 1.6, 0]
const cameraTarget = [0, 1.58, 0]
const cameraPosition = [0, iconPosition[1], .7]





const AppCanvas = memo(({onCreated}) => {
  const [pixelRatio/*, setPixelRatio*/] = useQueryState('pixelRatio', window.devicePixelRatio)
  const [enableShadowMap/*, setEnableShadowMap*/] = useQueryState('shadowMap', false)

  // useControl('Pixel ratio', { type: 'number', state: [pixelRatio, setPixelRatio], min: 0, max: window.devicePixelRatio, group: 'Renderer' });
  // useControl('Shadows enabled', { type: 'boolean', state: [enableShadowMap, setEnableShadowMap], group: 'Renderer' });
  // const showFPS = useControl('Show FPS', { type: 'boolean', value: false, group: 'Environment' });

  return (
    <CanvasWithControls
      gl={{
        antialias: true,
        alpha: false,
        powerPreference: 'high-performance',
      }}
      pixelRatio={Math.min(pixelRatio, 1.6)}
      noEvents
      colorManagement
      camera={{
        fov: 40,
        near: 0.1,
        position: cameraPosition,
        zoom: 1,
      }}
      // shadowMap={{
      //   enabled: enableShadowMap,
      //   type: PCFSoftShadowMap
      // }}
      concurrent
      onCreated={({gl, ...props}) => {
        gl.debug.checkShaderErrors = false
        gl.setClearColor('#141518', 1.0)
        onCreated({ gl, ...props })
        setTimeout(() => gl.domElement.parentNode.style.opacity = 1, 0)
      }}
      style={{
        position: 'fixed',
        top: 0,
        left: 0,
        right: 0,
        bottom: 0,
        opacity: 0,
      }}
    >
      <Suspense fallback={null}>
        <Scene center={iconPosition} enableShadowMap={enableShadowMap}/>
        <MyOrbitControls target={cameraTarget} cameraPosition={cameraPosition} />
      </Suspense>

      {/* { showFPS && (
        <Stats/>
      )} */}
      <Perf/>
      <DefaultXRControllers/>
      {/* <XRPackage onStarted={() => console.log("Chimera session started")}/> */}
      {/* <CopyToClipboard /> */}      
    </CanvasWithControls>
  )
})

function App() {  
  const showControls = useUIStore(s => s.showControls)
  const [gl, setGL] = useState()  
  
  const isAboutOpen = useUIStore(s => s.aboutOpen)
  


  return (
    <div className="App">
      <Controls.Provider>  
        <AppCanvas onCreated={({gl}) => setGL(gl)}/>

        <div className={'AppUI ' + (isAboutOpen ? 'hidden' : '')}>
          
          <Router>
            <Switch>
              <Route path="/remix">
                <Remixer />
              </Route>
              <Route path="/view">
                <RemixCTA align="right" />
              </Route>
               <Route path="/about">
                <Gallery />
              </Route>
              <Route path="/">
                <Gallery />
              </Route>
            </Switch>

            <BackLink />
            { !isAboutOpen && <button href="#" className="AboutLink" onClick={() => useUIStore.setState({ aboutOpen: true })}>About</button> }
            <a href="https://14islands.com" className="IslandsLink">
              <span>Made by</span>
              <svg width="64" height="14" viewBox="0 0 64 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M13.4302 10.1225V3.17896H11.62L7.15724 9.66656L6.69214 10.3121L6.99906 11.1262H12.1429L12.1429 13.9483L13.4302 13.9483L13.4302 11.1262H14.8486L14.8291 10.1219H13.4302V10.1225ZM12.1429 10.1225H8.22497L12.1429 4.17214V10.1225Z" fill="white"/>
                <path d="M17.8367 4.17175H16.5417V12.0423H17.8367V4.17175Z" fill="white"/>
                <path d="M17.8533 0.5905C17.6485 0.42019 17.4218 0.335327 17.1727 0.335327C16.9237 0.335327 16.7076 0.420775 16.5253 0.5905C16.3317 0.749691 16.2349 0.985551 16.2349 1.29808C16.2349 1.61119 16.3317 1.85759 16.5253 2.03902C16.7301 2.21986 16.9455 2.31058 17.1727 2.31058C17.4106 2.31058 17.6373 2.21986 17.8533 2.03902C18.0469 1.84705 18.1437 1.60007 18.1437 1.29808C18.1437 0.996671 18.0469 0.760811 17.8533 0.5905Z" fill="white"/>
                <path d="M24.4703 8.22522C24.1988 8.06368 23.8907 7.92966 23.5449 7.82256C23.199 7.71604 22.8572 7.61596 22.5196 7.5229C22.2705 7.45618 22.038 7.38595 21.8226 7.31104C21.6071 7.23613 21.4159 7.14892 21.25 7.04943C21.0842 6.94993 20.9567 6.83054 20.8682 6.69183C20.7796 6.55313 20.7353 6.38165 20.7353 6.17622C20.7353 5.84906 20.8652 5.5775 21.1255 5.36154C21.3858 5.14558 21.7535 5.03731 22.2292 5.03731C22.705 5.03731 23.1022 5.13914 23.4203 5.34164C23.7384 5.54473 23.9586 5.79171 24.0802 6.08258L25.1509 5.49849C24.9903 5.09408 24.6557 4.74702 24.1463 4.45848C23.6369 4.16936 23.0367 4.02539 22.3449 4.02539C21.9406 4.02539 21.5658 4.08158 21.2199 4.19395C20.8741 4.30632 20.5695 4.46375 20.3068 4.66625C20.0436 4.86875 19.8394 5.1128 19.6924 5.39783C19.5454 5.68285 19.4723 6.00064 19.4723 6.35063C19.4723 6.71232 19.5513 7.01607 19.7089 7.26246C19.8665 7.50886 20.0743 7.71604 20.3316 7.88284C20.589 8.04964 20.8782 8.18952 21.1993 8.30189C21.5204 8.41426 21.8409 8.51433 22.1619 8.60154C22.7486 8.7736 23.2173 8.95035 23.5691 9.13354C23.9202 9.31673 24.0961 9.59882 24.0961 9.981C24.0961 10.1858 24.0477 10.362 23.9509 10.5089C23.8541 10.6558 23.7266 10.7805 23.5691 10.8829C23.4115 10.9853 23.2273 11.0602 23.0172 11.1076C22.8071 11.1544 22.594 11.1784 22.378 11.1784C21.9742 11.1784 21.6319 11.1141 21.3527 10.9847C21.073 10.856 20.8558 10.712 20.7011 10.5528C20.4963 10.3608 20.3417 10.1466 20.2366 9.91076L19.199 10.52C19.3595 10.8325 19.5862 11.1117 19.8795 11.3564C20.1286 11.567 20.4491 11.7584 20.8422 11.9317C21.2353 12.1043 21.7358 12.1909 22.3449 12.1909C22.8206 12.1909 23.2456 12.1295 23.6192 12.006C23.9928 11.8831 24.3133 11.7116 24.5819 11.4927C24.8504 11.2738 25.0523 11.0175 25.1881 10.7243C25.3238 10.4311 25.3917 10.1174 25.3917 9.78318C25.3917 9.39983 25.3055 9.08496 25.1343 8.83857C24.9632 8.591 24.7413 8.38675 24.4703 8.22522Z" fill="white"/>
                <path d="M28.1045 0L26.8096 0L26.8096 12.0423H28.1045L28.1045 0Z" fill="white"/>
                <path d="M36.5282 10.9882C36.4727 10.9993 36.3812 11.0046 36.2543 11.0046C36.066 11.0046 35.9267 10.942 35.8352 10.8161C35.7437 10.6903 35.6983 10.4269 35.6983 10.0249V6.80301C35.6983 6.41264 35.6469 6.04159 35.5448 5.68984C35.4421 5.3381 35.2751 5.04138 35.0425 4.79849C34.81 4.55561 34.5072 4.36599 34.1336 4.22962C33.76 4.09326 33.302 4.02478 32.7595 4.02478C32.2118 4.02478 31.7455 4.10847 31.3607 4.27586C30.9758 4.44324 30.6648 4.63404 30.4269 4.84883C30.1448 5.10049 29.9288 5.38844 29.7794 5.71208L30.8667 6.28798C30.9717 6.05212 31.1016 5.83792 31.2568 5.64595C31.3949 5.48676 31.5832 5.34571 31.8211 5.22222C32.0589 5.09873 32.3658 5.03728 32.7424 5.03728C33.3291 5.03728 33.7576 5.19354 34.0291 5.50607C34.3 5.8186 34.4358 6.22711 34.4358 6.73161V7.62237L32.8587 7.81961C32.416 7.87696 32.03 7.94661 31.7007 8.02971C31.3713 8.11282 31.0602 8.22812 30.7669 8.37677C30.4736 8.5424 30.2274 8.75661 30.0279 9.01939C29.8284 9.28217 29.7234 9.61928 29.7122 10.0307C29.7122 10.6938 29.9181 11.2194 30.3307 11.6074C30.7427 11.996 31.32 12.1903 32.0613 12.1903C32.6255 12.1903 33.1349 12.0487 33.5888 11.7666C34.0427 11.4839 34.3886 11.1345 34.6264 10.7172C34.6707 11.1017 34.8064 11.4143 35.0331 11.6554C35.2597 11.8971 35.5531 12.0177 35.9131 12.0177C36.1563 12.0177 36.3375 12.003 36.4567 11.9732C36.576 11.9433 36.6793 11.9041 36.7684 11.855L36.7017 10.956C36.6415 10.966 36.5836 10.9771 36.5282 10.9882ZM34.4364 9.28451C34.4364 9.52037 34.385 9.75096 34.2829 9.9757C34.1802 10.201 34.0391 10.4035 33.8597 10.585C33.6797 10.7658 33.4572 10.9098 33.1916 11.0169C32.926 11.124 32.6161 11.1772 32.262 11.1772C31.8636 11.1772 31.5578 11.0842 31.3447 10.8975C31.1317 10.7108 31.0254 10.434 31.0254 10.0664C31.0473 9.67137 31.2161 9.37815 31.5318 9.1856C31.6924 9.09781 31.883 9.02524 32.1044 8.9673C32.3257 8.90936 32.55 8.86429 32.7766 8.83152C33.07 8.78762 33.3757 8.7449 33.6939 8.70393C34.012 8.66296 34.2599 8.63136 34.437 8.60912V9.28451H34.4364Z" fill="white"/>
                <path d="M43.873 4.6832C43.6293 4.45846 43.343 4.29224 43.0137 4.18514C42.6843 4.07804 42.329 4.02478 41.9471 4.02478C41.6148 4.02478 41.3108 4.0757 41.034 4.17695C40.7572 4.27878 40.5058 4.41164 40.2785 4.5761C40.0513 4.74055 39.8524 4.92608 39.6806 5.13151C39.5089 5.33752 39.379 5.54704 39.2905 5.76125H39.2073C39.2073 5.6518 39.2073 5.52129 39.2073 5.37029C39.2073 5.2193 39.2043 5.07298 39.199 4.93018C39.1937 4.78737 39.1878 4.65159 39.1825 4.52284C39.1771 4.39408 39.1683 4.23782 39.1577 4.17227H37.8958C37.9176 4.45202 37.9371 4.80552 37.9536 5.1157C37.9701 5.42589 37.9784 5.66292 37.9784 5.82797V12.0428H39.2734V7.88223C39.2734 7.5457 39.3218 7.20801 39.4186 6.86914C39.5153 6.53028 39.6617 6.22536 39.8583 5.95555C40.0548 5.68575 40.298 5.4651 40.589 5.29421C40.8794 5.12331 41.2182 5.03787 41.606 5.03787C41.9105 5.03787 42.1732 5.08878 42.3945 5.19062C42.6158 5.29245 42.797 5.42648 42.9381 5.59152C43.0792 5.75656 43.1872 5.94853 43.2621 6.16625C43.3371 6.38396 43.3743 6.61163 43.3743 6.84866V12.0428L44.661 12.0428V6.85627C44.661 6.35177 44.5902 5.91927 44.4491 5.55992C44.3092 5.20057 44.1168 4.90852 43.873 4.6832Z" fill="white"/>
                <path d="M53.5146 10.3954V0L52.2279 0V4.42808C52.2279 4.54337 52.2308 4.69437 52.2361 4.88107C52.2414 5.06776 52.2556 5.23749 52.2775 5.39141H52.1942C52.0892 5.22696 51.9522 5.06191 51.7834 4.89745C51.6146 4.733 51.4193 4.58317 51.1985 4.44914C50.9772 4.31454 50.7364 4.20743 50.4761 4.12784C50.2158 4.04824 49.9449 4.00844 49.6627 4.00844C49.148 4.00844 48.6711 4.11028 48.2308 4.31278C47.7911 4.51586 47.4092 4.79972 47.0852 5.16433C46.7611 5.52953 46.5056 5.96848 46.3173 6.48117C46.129 6.99444 46.0352 7.55278 46.0352 8.15618C46.0352 8.76544 46.1266 9.31675 46.309 9.81071C46.4914 10.3047 46.7393 10.7284 47.0521 11.0825C47.3649 11.4366 47.7356 11.7093 48.1647 11.9013C48.5932 12.0932 49.0571 12.1892 49.5553 12.1892C49.854 12.1892 50.142 12.1465 50.4188 12.0616C50.6956 11.9768 50.95 11.8615 51.1826 11.7157C51.4151 11.5706 51.6211 11.4102 51.8011 11.2341C51.9812 11.0585 52.1287 10.8747 52.245 10.6827H52.3282C52.3282 10.7869 52.3335 10.901 52.3447 11.0245C52.3559 11.148 52.3642 11.2715 52.3695 11.395C52.3748 11.5185 52.3831 11.6923 52.3943 11.7994C52.4055 11.9065 52.4162 11.9873 52.4274 12.0423H53.6061C53.5836 11.7953 53.563 11.4582 53.5441 11.148C53.5246 10.8384 53.5146 10.5873 53.5146 10.3954ZM51.6306 10.4036C51.166 10.9192 50.5764 11.1773 49.8628 11.1773C49.1492 11.1773 48.5543 10.9192 48.0779 10.4036C47.6022 9.88796 47.3644 9.12245 47.3644 8.10702C47.3644 7.09218 47.6022 6.32373 48.0779 5.80285C48.5537 5.28138 49.1486 5.02036 49.8628 5.02036C50.577 5.02036 51.166 5.28138 51.6306 5.80285C52.0957 6.32432 52.3276 7.09218 52.3276 8.10702C52.3276 9.12245 52.0957 9.88796 51.6306 10.4036Z" fill="white"/>
                <path d="M60.1015 8.22521C59.83 8.06368 59.5219 7.92966 59.1761 7.82256C58.8302 7.71604 58.4884 7.61596 58.1508 7.5229C57.9017 7.45618 57.6692 7.38595 57.4538 7.31104C57.2383 7.23613 57.0471 7.14892 56.8812 7.04943C56.7154 6.94993 56.5879 6.83054 56.4994 6.69183C56.4108 6.55313 56.3666 6.38165 56.3666 6.17622C56.3666 5.84906 56.4964 5.5775 56.7567 5.36154C57.017 5.14558 57.3847 5.0373 57.8604 5.0373C58.3362 5.0373 58.7334 5.13914 59.0515 5.34164C59.3697 5.54472 59.5898 5.7917 59.7114 6.08258L60.7821 5.49849C60.6215 5.09407 60.2869 4.74702 59.7775 4.45848C59.2681 4.16936 58.6679 4.02539 57.9761 4.02539C57.5718 4.02539 57.197 4.08158 56.8511 4.19395C56.5053 4.30632 56.2007 4.46375 55.938 4.66625C55.6748 4.86875 55.4706 5.1128 55.3236 5.39783C55.1766 5.68285 55.1035 6.00064 55.1035 6.35063C55.1035 6.71232 55.1825 7.01607 55.3401 7.26246C55.4977 7.50886 55.7055 7.71604 55.9628 7.88284C56.2202 8.04964 56.5094 8.18951 56.8305 8.30188C57.1516 8.41425 57.4726 8.51433 57.7931 8.60154C58.3798 8.7736 58.8485 8.95035 59.2003 9.13354C59.5514 9.31672 59.7273 9.59882 59.7273 9.98099C59.7273 10.1858 59.6789 10.362 59.5821 10.5089C59.4853 10.6558 59.3579 10.7805 59.2003 10.8829C59.0427 10.9853 58.8585 11.0602 58.6484 11.1076C58.4383 11.1544 58.2252 11.1784 58.0092 11.1784C57.6055 11.1784 57.2631 11.1141 56.9839 10.9847C56.7042 10.856 56.487 10.712 56.3323 10.5528C56.1275 10.3608 55.9729 10.1466 55.8672 9.91076L54.8296 10.52C54.9901 10.8325 55.2168 11.1117 55.5101 11.3564C55.7592 11.567 56.0797 11.7584 56.4728 11.9317C56.8659 12.1043 57.3664 12.1909 57.9755 12.1909C58.4513 12.1909 58.8762 12.1295 59.2498 12.006C59.6235 11.8831 59.944 11.7116 60.2125 11.4927C60.4811 11.2738 60.6829 11.0175 60.8187 10.7243C60.9544 10.4311 61.0223 10.1174 61.0223 9.78318C61.0223 9.39983 60.9361 9.08496 60.765 8.83857C60.5938 8.591 60.3725 8.38675 60.1015 8.22521Z" fill="white"/>
                <path d="M63.7139 10.4914C63.5232 10.3287 63.2978 10.2473 63.0375 10.2473C62.7996 10.2473 62.5836 10.3287 62.39 10.4914C62.1964 10.6541 62.0996 10.8724 62.0996 11.1463C62.0996 11.4459 62.1964 11.6794 62.39 11.8474C62.5836 12.0154 62.7996 12.0991 63.0375 12.0991C63.2978 12.0991 63.5232 12.0148 63.7139 11.8474C63.9051 11.6794 64.0001 11.4459 64.0001 11.1463C64.0001 10.8724 63.9051 10.6541 63.7139 10.4914Z" fill="white"/>
                <path d="M4.03423 3.14734H3.33658C3.19847 3.31765 2.99365 3.47274 2.72215 3.61262C2.45064 3.7525 2.1508 3.87306 1.82146 3.9749C1.49211 4.07673 1.16571 4.15457 0.84167 4.20959C0.518814 4.26401 0.237863 4.29152 0 4.29152L0.30692 5.30402C0.772023 5.30402 1.23122 5.24784 1.68511 5.13547C2.139 5.0231 2.49019 4.90078 2.73927 4.76909L2.73927 11.1303H0.35709L0.35709 12.1428L6.13428 12.1428L6.13428 11.1303H4.03423L4.03423 3.14734Z" fill="white"/>
              </svg>
            </a>

          </Router>

          <VRButton gl={gl} />

        </div>

        <AboutOverlay />

        { (showControls && !isAboutOpen) &&
          <Controls
            title="Blob Mixer"
            collapsed={true}
            anchor={'bottom_right'}
            defaultClosedGroups={['Renderer', 'Lights', 'Blob Material', 'Blob Noise', 'Blob Surface Noise', 'Blob Geometry', 'Environment', 'Floor', 'Spotlight#1', 'Spotlight#2', 'Spotlight#3', 'Spotlight#4', 'Spotlight#5', 'Camera', 'Post-processing']}
            style={{
              maxHeight: 'min(90vh, 80vw)',
              borderRadius: '0px',
              background: '#000',
              color: '#fff',
              fontFamily: 'Aften Screen',
            }}
            className="GUI"
          />
        }
      </Controls.Provider>
      {/* Loader doubles FPS.. whaaaat */}
      <Loader/>
    </div>
  );
}



export default App;
